{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Documents\\\\comic-app\\\\src\\\\Components\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../css/form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [textInputs, setTextInputs] = useState(Array(10).fill(\"\"));\n  const [imageURLs, setImageURLs] = useState([]);\n  const handleInputChange = (e, index) => {\n    const newInputs = [...textInputs];\n    newInputs[index] = e.target.value;\n    setTextInputs(newInputs);\n  };\n  const blobToDataURL = blob => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  };\n  const fetchComicImage = async (data, index) => {\n    try {\n      const response = await axios.post(\"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\", data, {\n        headers: {\n          Accept: \"image/png\",\n          Authorization: \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\n          \"Content-Type\": \"application/json\"\n        },\n        responseType: \"blob\"\n      });\n      const imageUrl = await blobToDataURL(response.data);\n\n      // Update the imageURLs array with the fetched image URL\n      setImageURLs(prevURLs => {\n        const newURLs = [...prevURLs];\n        newURLs[index] = imageUrl;\n        return newURLs;\n      });\n    } catch (error) {\n      console.error(\"Error fetching comic image:\", error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Fetch comic images for each input\n    await Promise.all(textInputs.map(async (input, index) => {\n      var data = {\n        inputs: input\n      };\n      await fetchComicImage(data, index);\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comic-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: textInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `textInput${index + 1}`,\n            children: `Text for Panel ${index + 1}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: `textInput${index + 1}`,\n            value: input,\n            onChange: e => handleInputChange(e, index),\n            rows: \"2\"\n            //   required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Comic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: imageURLs.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Comic Panel ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"RCy75dvq6OzV/QLVHFAP0PEZoSM=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Form","_s","textInputs","setTextInputs","Array","fill","imageURLs","setImageURLs","handleInputChange","e","index","newInputs","target","value","blobToDataURL","blob","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","fetchComicImage","data","response","post","headers","Accept","Authorization","responseType","imageUrl","prevURLs","newURLs","error","console","handleSubmit","preventDefault","all","map","input","inputs","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","rows","type","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/shrey/OneDrive/Documents/comic-app/src/Components/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/form.css\";\r\n\r\nconst Form = () => {\r\n  const [textInputs, setTextInputs] = useState(Array(10).fill(\"\"));\r\n  const [imageURLs, setImageURLs] = useState([]);\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const newInputs = [...textInputs];\r\n    newInputs[index] = e.target.value;\r\n    setTextInputs(newInputs);\r\n  };\r\n\r\n  const blobToDataURL = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  };\r\n\r\n  const fetchComicImage = async (data, index) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\",\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"image/png\",\r\n            Authorization:\r\n              \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n\r\n      const imageUrl = await blobToDataURL(response.data);\r\n\r\n      // Update the imageURLs array with the fetched image URL\r\n      setImageURLs((prevURLs) => {\r\n        const newURLs = [...prevURLs];\r\n        newURLs[index] = imageUrl;\r\n        return newURLs;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching comic image:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Fetch comic images for each input\r\n    await Promise.all(\r\n      textInputs.map(async (input, index) => {\r\n        var data = {\r\n          inputs: input,\r\n        };\r\n        await fetchComicImage(data, index);\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"comic-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"text-box\">\r\n          {textInputs.map((input, index) => (\r\n            <div key={index}>\r\n              <label htmlFor={`textInput${index + 1}`}>{`Text for Panel ${\r\n                index + 1\r\n              }:`}</label>\r\n              <textarea\r\n                id={`textInput${index + 1}`}\r\n                value={input}\r\n                onChange={(e) => handleInputChange(e, index)}\r\n                rows=\"2\"\r\n                //   required\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Generate Comic</button>\r\n      </form>\r\n\r\n      {/* Display fetched images in a grid */}\r\n      <div className=\"image-grid\">\r\n        {imageURLs.map((imageUrl, index) => (\r\n          <img key={index} src={imageUrl} alt={`Comic Panel ${index + 1}`} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}